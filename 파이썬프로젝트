# 년도별 인구 수는 매년 1월을 기준으로 잡음
# 병원 정보는 공공 데이터에서 '건강보험심사평가원_전국 병의원 및 약국 현황' 데이터를 참조
# 인구 수 정보는 행정안전부 사이트의 '행정동별 주민등록 인구 및 세대현황' 데이터를 참조

import csv
from collections import defaultdict

# CSV 파일 경로 설정
file_path_2021 = "/content/1. 병원정보서비스 2021.12.csv"
file_path_2022 = "/content/1.병원정보서비스 2022.12.csv"
file_path_2023 = "/content/1.병원정보서비스.csv"
file_path2_2021 = "/content/2021_수정_주민등록인구및세대현황_월간.csv"
file_path2_2022 = "/content/2022_수정_주민등록인구및세대현황_월간.csv"
file_path2_2023 = "/content/2023_수정_주민등록인구및세대현황_월간.csv"

# 시도별 데이터 집계
def addProvince(file_path):
    province_count = defaultdict(int) # 시도별 병원 개수 저장할 딕셔너리 생성(기본값이 0인 딕셔너리)

    # CSV 파일 읽기
    with open(file_path, "r", encoding="cp949") as csvfile:
        reader = csv.reader(csvfile)
        header = next(reader)  # 첫번째 행(헤더) 건너뛰기

        for row in reader: # 각 행을 읽음
            province_name = row[5]  # F열 데이터(시도코드명)을 하나씩 읽어서 지역별 병원의 총 개수를 센다
            province_count[province_name] += 1 # 시도 이름을 키로, 병원의 개수를 값으로 저장

    return province_count # 시도별 병원 개수 담은 딕셔너리 반환

# 인구 데이터 읽기 (빈 값 처리 추가)
def addPopulation(file_path):
    populationData = {} # 각 시도의 인구수를 저장하는 빈 딕셔너리

    # CSV 파일 읽기
    with open(file_path, "r", encoding="cp949") as csvfile:
        reader = csv.reader(csvfile)
        header = next(reader)  # 첫번째 행(헤더) 건너뛰기

        for row in reader: 
            province_name = row[0]  # A열: 행정구역(지역명)
            population_str = row[1].replace(",", "")  # B열: 2021년01월_총인구수 (쉼표 제거)
          
            if not population_str.strip(): # 만약 인구 수가 비어있으면, 해당 행 건너뛰기
                continue
            try: # 인구 수가 숫자로 변환 가능하다면 변수에 시도별 인구 수 저장
                population = int(population_str) # int형으로 형변환하여 저장
                populationData[province_name] = population # 인구 수 딕셔너리에 저장
            except ValueError: # 유효하지 않으면 오류 메시지 출력
                print(f"유효하지 않은 값입니다. {province_name}: {row[1]}")
                continue

    return populationData # 인구 수 담은 딕셔너리 반환

# 병원 수와 인구 수 데이터를 사용할 계산 함수 정의
def calHospital(hospitalData, populationData):
    result = [] # 결과 담을 리스트 선언

    for province, hospitalCount in hospitalData.items():
        population = populationData.get(province, None)
        if population:  # 만약 인구 수 데이터가 존재한다면
            ratio = hospitalCount / population # 병원 수를 인구 수로 나누어 비율 계산 => ratio 변수에 저장
            result.append((province, ratio)) # 지역과 비율을 append로 result 리스트에 추가

    return result # 결과 반환

# 데이터 처리 및 결과 출력
def process_and_print(file_path_hospital, file_path_population, year): # 병원 정보와 인구 정보 처리, 계산 결과 출력
    hospitalData = addProvince(file_path_hospital) # 병원 정보를 변수에 담는다
    populationData = addPopulation(file_path_population) # 인구 정보를 변수에 담는다
    hospitalTot = calHospital(hospitalData, populationData) # 위에서 정의한 계산 함수에 두 매개변수를 넣어 최종 계산

    print(f"\n{year}년 시도별 병원 수 / 인구 수:") # 연도 표시할 헤더 출력
    for province, ratio in hospitalTot: # 최종 계산한 결과를 담은 변수를 출력
        print(f"{province}: {ratio:.6f}") # 소수점 6자리까지 출력

# 각각 연도 데이터에 대해 process_and_print 함수 호출해 처리
process_and_print(file_path_2021, file_path2_2021, 2021) 
process_and_print(file_path_2022, file_path2_2022, 2022)
process_and_print(file_path_2023, file_path2_2023, 2023)
